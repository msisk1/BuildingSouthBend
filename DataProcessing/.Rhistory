#Setup
rm(list=ls(all=TRUE)) # clear memory
packages<- c("maptools","rgdal","leaflet","htmlwidgets") # list the packages that you'll need
lapply(packages, require, character.only=T) # load the packages, if they don't load you might need to install them first
setwd("N:/www_pages_moved_to_AWS/BuildingSouthBend/DataProcessing")
out.dir.name <- "WebData"
data.dir.name <- "SpatialData"
district.json.name <- file.path("../LeafletModules/WebData","Districts.js")
out.path <- file.path(getwd(),out.dir.name)
property.file <- "All_SB_Buildings_20171117"
property.download <- FALSE
latlong <- "+init=epsg:4326"
active.sections <- c("West Washington","Downtown","Chapin Park","West North Shore", "River Bend","Riverside Drive","East Wayne Street",
"Edgewater Place","Lincolnway East","North St. Joseph Street","Taylor's Field")
if(property.download){
download.file("http://buildingsouthbend.nd.edu/properties.csv", destfile = "properties.csv")
buildings.table <- read.csv("properties.csv",stringsAsFactors = F)
buildings.table<- buildings.table[complete.cases(buildings.table[ ,c("Longitude","Latitude")]),]
coordinates(buildings.table)=~Longitude+Latitude
proj4string(buildings.table) <- CRS(latlong)
writeOGR(buildings.table, dsn="." ,layer=property.file,driver="ESRI Shapefile",overwrite_layer = T)
}else{
buildings.table <- readOGR(dsn="." ,layer=property.file)
}
historic.districts <- readOGR(dsn = "SpatialData", layer = "Historic_Districts_LL")
proj4string(historic.districts) <- CRS("+init=epsg:3857")  #I have no idea why this is required.
historic.districts<- spTransform(historic.districts, CRS("+init=epsg:3857"))
label.locs <- read.csv(file.path(data.dir.name, "District_extraData.csv"))
historic.districts <- merge(historic.districts,label.locs,by="District_N")
historic.districts@data$used <- 0
historic.districts@data$used[historic.districts@data$District_N %in% active.sections] <- 1
buildings.table$popupw <- paste(sep = "",  "<b>",buildings.table$Slug,"</b><br/>",
"Name = ",buildings.table$Custom.Name,"<br/>"
)
buildings.table$popupw <- paste(sep = "",
"<b>South Bend Historic Properties</b></br><hr>",
"<b>",buildings.table$Slug,"</b><br/>",
"Name = ",buildings.table$Custom.Name,"<br/>"
)
leaflet() %>%
addTiles() %>% #basic OSM
addMarkers(data = buildings.table, popup = buildings.table$popupw)  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
names(buildings.table@data)
root.url <- "http://buildingsouthbend.nd.edu/properties/"
buildings.table$popupw <- paste(sep = "",
"<b>South Bend Historic Properties</b></br><hr>",
"<b>Historic Distric: </b>",buildings.table$Distrct,"<br/>",
"<b>Name: </b>",buildings.table$Custom.Name,"<br/>",
"<b>Address: </b>",buildings.table$Address,"<br/>",
"<b>Constrution Date: </b>",buildings.table$Date,"<br/>",
"<br>",
"<b>More information: </b><a href=",root.url,buildings.table$Slug,">More Information</a><br>"
)
leaflet() %>%
addTiles() %>% #basic OSM
addMarkers(data = buildings.table, popup = buildings.table$popupw)  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addMarkers(data = buildings.table, popup = buildings.table$popupw, size = 3)  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
?addAwesomeMarkers
addMarkers()
?addMarkers()
?markerOptions
leaflet() %>%
addTiles() %>% #basic OSM
addMarkers(data = buildings.table, popup = buildings.table$popupw, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = 'red'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw, icon = awesomeIcons(icon = 'ion-ionic', library = 'ion', markerColor = 'red'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw, icon = awesomeIcons( library = 'ion', markerColor = 'red'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw, icon = awesomeIcons( size = 3, library = 'ion', markerColor = 'red'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw, icon = awesomeIcons( iconWidth = 23, library = 'ion', markerColor = 'red'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw, icon = awesomeIcons(icon= 'flag', library = 'ion', markerColor = 'red'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw, icon = awesomeIcons(icon= 'none', library = 'ion', markerColor = 'red'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
makeAwesomeIcon()
?makeAwesomeIcon
?addAwesomeMarkers
?markerOptions
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw, icon = awesomeIcons(iconSize = [24,32],icon= 'none', library = 'ion', markerColor = 'blue'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw, icon = awesomeIcons(icon= 'none', library = 'ion', markerColor = 'blue'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw, iconSize = [12,12],icon = awesomeIcons(icon= 'none', library = 'ion', markerColor = 'blue'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw, iconWidth=12,icon = awesomeIcons(icon= 'none', library = 'ion', markerColor = 'blue'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
?addAwesomeMarkers
markerOptions
?markerOptions
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw, options = markerOptions(iconWidth=12),icon = awesomeIcons(icon= 'none', library = 'ion', markerColor = 'blue'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = awesomeIcons(icon= 'none', library = 'ion', markerColor = 'blue'),iconSize: [40, 40] )  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = awesomeIcons(icon= 'none', library = 'ion', markerColor = 'blue')iconSize: [40, 40] )  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = awesomeIcons(icon= 'none', library = 'ion', markerColor = 'blue'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = awesomeIcons(icon= 'none', library = 'ion', markerColor = 'blue',markerOptions(clickable=F)))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = awesomeIcons(icon= 'none', library = 'ion', markerColor = 'blue'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = awesomeIcons(iconWidth = 38, iconHeight = 95,icon= 'none', library = 'ion', markerColor = 'blue'))  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons)  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
icons <- awesomeIcons(
icon = 'none',
iconColor = 'blue',
library = 'ion',
markerColor = "red")
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons)  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
?icons
icons2 <- icons(
iconWidth = 10,
iconHeigh= 10)
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
icons2 <- icons(
iconWidth = 10,
iconHeigh= 10)
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
icons2 <- icons(
iconWidth = 1,
iconHeigh= 1)
leaflet() %>%
addTiles() %>% #basic OSM
addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),])
icons2 <- icons(
icon = 'none',
library = 'ion',
markerColor = "blue",
font-size = 18)
icons2 <- icons(
icon = 'none',
library = 'ion',
markerColor = "blue",
fontSize = 18)
leaflet() %>%
addTiles() %>% #basic OSM
# addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addCircleMarkers(data = buildings.table, popup = buildings.table$popupw,radius = 3)  %>%
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
# addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addCircleMarkers(data = buildings.table, popup = buildings.table$popupw,radius = 3, color = "red")  %>%
addPolygons(data = historic.districts[which(historic.districts$used==1),])
leaflet() %>%
addTiles() %>% #basic OSM
# addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addCircleMarkers(data = buildings.table, popup = buildings.table$popupw,radius = 3, color = "red",opacity = 1)  %>%
addPolygons(data = historic.districts[which(historic.districts$used==1),])
?addPolygons
leaflet() %>%
addTiles() %>% #basic OSM
# addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addCircleMarkers(data = buildings.table, popup = buildings.table$popupw,radius = 3, color = "red",opacity = 1)  %>%
addPolygons(data = historic.districts[which(historic.districts$used==1),,weight = 2])
leaflet() %>%
addTiles() %>% #basic OSM
# addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addCircleMarkers(data = buildings.table, popup = buildings.table$popupw,radius = 3, color = "red",opacity = 1)  %>%
addPolygons(data = historic.districts[which(historic.districts$used==1),weight = 2])
leaflet() %>%
addTiles() %>% #basic OSM
# addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addCircleMarkers(data = buildings.table, popup = buildings.table$popupw,radius = 3, color = "red",opacity = 1)  %>%
addPolygons(data = historic.districts[which(historic.districts$used==1),], weight = 2)
?addCircleMarkers()
leaflet() %>%
addTiles() %>% #basic OSM
# addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addCircleMarkers(data = buildings.table, popup = buildings.table$popupw,radius = 3, color = "red",opacity = 1)  %>%
addPolygons(data = historic.districts[which(historic.districts$used==1),], weight = 2)
addCircleMarkers(data = buildings.table, popup = buildings.table$popupw,radius = 3, color = "red",opacity = 1)  %>%
writeOGR(historic.districts, "temp", layer="historic.districts", driver="GeoJSON")
leaflet() %>%
addTiles() %>% #basic OSM
# addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),], weight = 2)  %>%
addCircleMarkers(data = buildings.table, popup = buildings.table$popupw,radius = 3, color = "red",opacity = 1)
map<-leaflet() %>%
addTiles() %>% #basic OSM
# addAwesomeMarkers(data = buildings.table, popup = buildings.table$popupw,icon = icons2)  %>%#For the points
addPolygons(data = historic.districts[which(historic.districts$used==1),], weight = 2)  %>%
addCircleMarkers(data = buildings.table, popup = buildings.table$popupw,radius = 3, color = "red",opacity = 1)
saveWidget(widget = map, file = "testFromR.html")
writeOGR(historic.districts, "temp", layer="historic.districts", driver="GeoJSON")
file.copy("temp", district.json.name, overwrite = T) #for some reason I can't get writeOGR to write to a subdirectory, so this just copys it.
file.remove("temp") #and deletes the temp file
text.json <- readChar(district.json.name, file.info(district.json.name)$size)
text.json <- paste("var districts = ",text.json,";", sep="")
write(text.json,district.json.name)
writeToJS <- function(sdf,out.json,var.name){
writeOGR(sdf, "temp", layer=sdf, driver="GeoJSON")
file.copy("temp", out.json, overwrite = T) #for some reason I can't get writeOGR to write to a subdirectory, so this just copys it.
file.remove("temp") #and deletes the temp file
text.json <- readChar(out.json, file.info(out.json)$size)
text.json <- paste("var ",var.name," = ",text.json,";", sep="")
write(text.json,out.json)
}
writeToJS(historic.districts,district.json.name,"districts")
writeOGR(sdf, "temp", layer="sdf", driver="GeoJSON")
writeToJS <- function(sdf,out.json,var.name){
writeOGR(sdf, "temp", layer="sdf", driver="GeoJSON")
file.copy("temp", out.json, overwrite = T) #for some reason I can't get writeOGR to write to a subdirectory, so this just copys it.
file.remove("temp") #and deletes the temp file
text.json <- readChar(out.json, file.info(out.json)$size)
text.json <- paste("var ",var.name," = ",text.json,";", sep="")
write(text.json,out.json)
}
writeToJS(historic.districts,district.json.name,"districts")
buildings.json.name <- file.path("../LeafletModules/WebData","Buildings.js")
writeToJS(buildings.table,buildings.json.name,"buldings")
writeToJS(buildings.table,buildings.json.name,"buildings")
unique(buildings.table$Distrct)
unique(historic.districts$District_N)
